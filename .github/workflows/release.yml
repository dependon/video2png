name: Create Release and Build Binaries

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0, v2.1.3

permissions:
  contents: write # Needed to create releases and upload assets

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            asset_name_suffix: linux
            pyinstaller_flags: ""
          - os: macos-latest
            asset_name_suffix: macos
            pyinstaller_flags: "--windowed" # macOS apps are typically windowed
          - os: windows-latest
            asset_name_suffix: windows.exe
            pyinstaller_flags: "--windowed" # Windows GUI apps need this

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # Or match project requirement

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller
      # Use the correct executable name based on OS suffix
      run: pyinstaller --onefile ${{ matrix.pyinstaller_flags }} --name video2png-${{ matrix.os }} main.py

    - name: Prepare Artifact Path
      id: artifact_path
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          echo "path=dist/video2png-${{ matrix.os }}.exe" >> $GITHUB_OUTPUT
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
          # PyInstaller might create an .app bundle on macOS, adjust if needed
          # Assuming it creates a single executable file for simplicity here
          echo "path=dist/video2png-${{ matrix.os }}" >> $GITHUB_OUTPUT 
        else
          echo "path=dist/video2png-${{ matrix.os }}" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: video2png-${{ matrix.asset_name_suffix }} # Artifact name includes OS suffix
        path: ${{ steps.artifact_path.outputs.path }} # Use the determined path

  release:
    name: Create GitHub Release
    needs: build # Run after all builds are complete
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts # Download all artifacts to 'artifacts' directory

      - name: List downloaded files # Debug step
        run: ls -R artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          # tag_name: ${{ github.ref_name }} # Use the tag that triggered the workflow (default)
          # name: Release ${{ github.ref_name }} # Default release name is the tag
          files: artifacts/**/* # Upload all files from all subdirectories in artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub Actions